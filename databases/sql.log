timestamp: 2011-11-14T20:15:55.132438
CREATE TABLE auth_user(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name CHAR(128),
    last_name CHAR(128),
    email CHAR(512),
    password CHAR(512),
    registration_key CHAR(512),
    reset_password_key CHAR(512)
);
success!
timestamp: 2011-11-14T20:15:55.281705
CREATE TABLE auth_group(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    role CHAR(512),
    description TEXT
);
success!
timestamp: 2011-11-14T20:15:55.387159
CREATE TABLE auth_membership(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    group_id INTEGER REFERENCES auth_group(id) ON DELETE CASCADE
);
success!
timestamp: 2011-11-14T20:15:55.555980
CREATE TABLE auth_permission(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER REFERENCES auth_group(id) ON DELETE CASCADE,
    name CHAR(512),
    table_name CHAR(512),
    record_id INTEGER
);
success!
timestamp: 2011-11-14T20:15:55.653849
CREATE TABLE auth_event(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    time_stamp TIMESTAMP,
    client_ip CHAR(512),
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    origin CHAR(512),
    description TEXT
);
success!
timestamp: 2011-11-14T20:15:55.786991
CREATE TABLE auth_cas(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    created_on TIMESTAMP,
    url CHAR(512),
    uuid CHAR(512)
);
success!
timestamp: 2011-11-14T21:42:45.143569
CREATE TABLE wall(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title CHAR(512),
    content TEXT,
    cover CHAR(512),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    updated_on TIMESTAMP,
    updated_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE
);
success!
timestamp: 2011-11-23T22:30:57.135131
CREATE TABLE blog(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title CHAR(512),
    content TEXT,
    cover CHAR(512),
    tag CHAR(512),
    created_on TIMESTAMP,
    created_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE,
    updated_on TIMESTAMP,
    updated_by INTEGER REFERENCES auth_user(id) ON DELETE CASCADE
);
success!
